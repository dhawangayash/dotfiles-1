#!/bin/zsh
# A fork of ossvol with minor changes and ratpoison/musca output
# Original by: Daniel J Griffiths <ghost1227[at]archlinux.us>
# Modified by: milomouse <vincent[at]fea.st>

vers='1.3-1'
volstore=$XDG_CONFIG_DIR/.volume
channel="vmix0-outvol"
argument=$2

usage() {
  echo "ossrat - control mpd and oss, output to ratpoison or musca."
	echo "usage: ossrat [option] [argument]"
	echo
	echo "Options:"
	echo "     -i, --increase - increase volume by [argument]"
	echo "     -d, --decrease - decrease volume by [argument]"
	echo "     -t, --toggle   - toggle play/pause"
	echo "     -m, --mute     - mute/unmute"
	echo "     -n, --next     - play [next] song"
	echo "     -p, --prev     - play previous song"
	echo "     -s, --stop     - stop playing current song"
	echo "     -v, --version  - display version"
	echo "     -h, --help     - display this"
	exit
}

err() {
	echo "$1"
	exit 1
}

toggle() {
	if [ $(mpc|head -2|tail -1|awk '{print $1}'|tr '[]' ' ') = playing ]; then
	  mpc toggle >> /dev/null
	  info=$(echo -n ">>> Paused >>> $(mpc|tail -1|awk '{print $2" "$3" "$4" "$5}'|tr 'r' 'R')")
    curr=$(ossmix|grep outvol|awk '{print $4}')
      if [[ -n $(ps -a|grep ratpoison) ]]; then
	      ratpoison -c "echo $info >>> $curr dB"
      elif [[ -n $(ps -a|grep musca) ]]; then
        musca -c "say $info >>> $curr dB"
      fi
      if [[ ! -n $(ps -a|grep xinit) ]]; then
        echo "$0: Paused"
      fi
	else
	  mpc toggle >> /dev/null
      first=$(echo -n ">>> $(mpc|head -1)")
      second=$(echo -n ">>> $(mpc|head -2|tail -1|awk '{print $3" "$2}')")
      info=$(echo -n $first $second)
      if [[ -n $(ps -a|grep ratpoison) ]]; then
        ratpoison -c "echo $info"
      elif [[ -n $(ps -a|grep musca) ]]; then
        musca -c "say $info"
      fi
      if [[ ! -n $(ps -a|grep xinit) ]]; then
        echo "$0: $(mpc|head -1)"
      fi
	fi
}

next() {
	if [ $(mpc|cat -n|cut -f 1|tail -1) = 1 ]; then
	  mpc play >> /dev/null
      first=$(echo -n ">>> $(mpc|head -1)")
      second=$(echo -n ">>> $(mpc|head -2|tail -1|awk '{print $3" "$2}')")
      info=$(echo -n $first $second)
      if [[ -n $(ps -a|grep ratpoison) ]]; then
        ratpoison -c "echo $info"
      elif [[ -n $(ps -a|grep musca) ]]; then
        musca -c "say $info"
      fi
      if [[ ! -n $(ps -a|grep xinit) ]]; then
        echo "$0: $(mpc|head -1)"
      fi
	else
	  mpc next >> /dev/null
      first=$(echo -n ">>> $(mpc|head -1)")
      second=$(echo -n ">>> $(mpc|head -2|tail -1|awk '{print $3" "$2}')")
      info=$(echo -n $first $second)
      if [[ -n $(ps -a|grep ratpoison) ]]; then
        ratpoison -c "echo $info"
      elif [[ -n $(ps -a|grep musca) ]]; then
        musca -c "say $info"
      fi
      if [[ ! -n $(ps -a|grep xinit) ]]; then
        echo "$0: $(mpc|head -1)"
      fi
	fi
}

previous() {
	if [ $(mpc|cat -n|cut -f 1|tail -1) = 1 ]; then
	  info=$(echo -n ">>> Nothing playing >>> $(mpc|tail -1|awk '{print $2" "$3" "$4" "$5}'|tr 'r' 'R')")
    if [[ -n $(ps -a|grep ratpoison) ]]; then
      ratpoison -c "echo $info"
    elif [[ -n $(ps -a|grep musca) ]]; then
      musca -c "say $info"
    fi
    if [[ ! -n $(ps -a|grep xinit) ]]; then
      echo "$0: Nothing playing."
    fi
	else
	  mpc prev >> /dev/null
      first=$(echo -n ">>> $(mpc|head -1)")
      second=$(echo -n ">>> $(mpc|head -2|tail -1|awk '{print $3" "$2}')")
      info=$(echo -n $first $second)
      if [[ -n $(ps -a|grep ratpoison) ]]; then
        ratpoison -c "echo $info"
      elif [[ -n $(ps -a|grep musca) ]]; then
        musca -c "say $info"
      fi
      if [[ ! -n $(ps -a|grep xinit) ]]; then
        echo "$0: $(mpc|head -1)"
      fi
	fi
}

cancel() {
	if [ $(mpc|cat -n|cut -f1|tail -1) = 3 ]; then
	  mpc stop >> /dev/null
      curr=$(ossmix|grep outvol|awk '{print $4}')
      info=$(echo -n ">>> Stopped >>> Volume: $curr dB")
      if [[ -n $(ps -a|grep ratpoison) ]]; then
        ratpoison -c "echo $info"
      elif [[ -n $(ps -a|grep musca) ]]; then
        musca -c "say $info"
      fi
      if [[ ! -n $(ps -a|grep xinit) ]]; then
        echo "$0: Stopped."
      fi
	fi
}

mute() {
	if [[ -f $volstore ]]; then
	  ossmix $channel $(<$volstore) >>/dev/null
	  rm -f $volstore
    curr=$(ossmix|grep outvol|awk '{print $4}')
      if [[ -n $(ps -a|grep ratpoison) ]]; then
        ratpoison -c "echo >>> Volume: $curr dB"
      elif [[ -n $(ps -a|grep musca) ]]; then
        musca -c "say >>> Volume: $curr dB"
      fi
      if [[ ! -n $(ps -a|grep xinit) ]]; then
        echo "$0: Volume: $curr dB."
      fi
	else
	  volume=$(ossmix $channel | awk '{print $10}' | awk -F : '{print $1}')
	  ossmix $channel 0 >>/dev/null
	  $(echo $volume >> $volstore)
      if [[ -n $(ps -a|grep ratpoison) ]]; then
        ratpoison -c "echo >>> Volume: MUTED"
      elif [[ -n $(ps -a|grep musca) ]]; then
        musca -c "say >>> Volume: MUTED"
      fi
      if [[ ! -n $(ps -a|grep xinit) ]]; then
        echo "$0: Volume: MUTED"
      fi
	fi
}

increase() {
	if [[ -f $volstore ]]; then
	  tmpvol=$(<$volstore)
	  newvol=$(expr $tmpvol + $argument)
	  ossmix $channel +$newvol >>/dev/null
	  rm -f $volstore
	else
	  ossmix $channel +$argument >>/dev/null
    curr=$(ossmix|grep outvol|awk '{print $4}')
      if [[ -n $(ps -a|grep ratpoison) ]]; then
        ratpoison -c "echo >>> Volume: $curr dB"
      elif [[ -n $(ps -a|grep musca) ]]; then
        musca -c "say >>> Volume: $curr dB"
      fi
      if [[ ! -n $(ps -a|grep xinit) ]]; then
        echo "$0: Volume: $curr dB"
      fi
	fi
}

decrease() {
	if [[ -f $volstore ]]; then
	  tmpvol=$(<$volstore)
	  newvol=$(expr $tmpvol - $argument)
	  ossmix $channel -- -$newvol >>/dev/null
	  rm $volstore
	else
	  ossmix $channel -- -$argument >>/dev/null
    curr=$(ossmix|grep outvol|awk '{print $4}')
      if [[ -n $(ps -a|grep ratpoison) ]]; then
        ratpoison -c "echo >>> Volume: $curr dB"
      elif [[ -n $(ps -a|grep musca) ]]; then
        musca -c "say >>> Volume: $curr dB"
      fi
      if [[ ! -n $(ps -a|grep xinit) ]]; then
        echo "$0: Volume: $curr dB"
      fi
	fi
}

version() {
  mdate=$(ls -lt $(which ossrat)|awk '{print $6" "$7" "$8}')
    if [[ -n $(ps -a|grep ratpoison) ]]; then
      ratpoison -c "echo ossrat $vers (last modified at $mdate)"
    elif [[ -n $(ps -a|grep musca) ]]; then
      musca -c "say ossrat $vers (last modified at $mdate)"
    fi
    if [[ ! -n $(ps -a|grep xinit) ]]; then
      echo "$0: $vers (last modified at $vers)"
    fi
}

announce() {
  curr=$(ossmix|grep outvol|awk '{print $4}')
	if [ $(mpc|cat -n|cut -f 1|tail -1) = 1 ]; then
	  first=$(echo -n ">>> Nothing Playing")
	  second=$(echo -n ">>> $(mpc|tail -1|awk '{print $2" "$3" "$4" "$5}'|tr 'r' 'R')")
	  info=$(echo -n $first $second)
      if [[ -n $(ps -a|grep ratpoison) ]]; then
        ratpoison -c "echo $info >>> $curr dB"
      elif [[ -n $(ps -a|grep musca) ]]; then
        musca -c "say $info >>> $curr dB"
      fi
      if [[ ! -n $(ps -a|grep xinit) ]]; then
        echo "$0: $(mpc|head -1) ($curr dB)"
      fi
  fi
  if [ $(mpc|head -2|tail -1|awk '{print $1}'|tr '[]' ' ') = paused ]; then
	  info=$(echo -n ">>> Paused >>> $(mpc|tail -1|awk '{print $2" "$3" "$4" "$5}'|tr 'r' 'R')")
      if [[ -n $(ps -a|grep ratpoison) ]]; then
        ratpoison -c "echo $info >>> $curr dB"
      elif [[ -n $(ps -a|grep musca) ]]; then
        musca -c "say $info >>> $curr dB"
      fi
      if [[ ! -n $(ps -a|grep xinit) ]]; then
        echo "$0: Paused. ($curr dB)"
      fi
	else
    first=$(echo -n ">>> $(mpc|head -1)")
    second=$(echo -n ">>> $(mpc|head -2|tail -1|awk '{print $3" "$2}')")
    info=$(echo -n $first $second)
      if [[ -n $(ps -a|grep ratpoison) ]]; then
        ratpoison -c "echo $info"
      elif [[ -n $(ps -a|grep musca) ]]; then
        musca -c "say $info"
      fi
      if [[ ! -n $(ps -a|grep xinit) ]]; then
        echo "$0: $(mpc|head -1)"
      fi
  fi
}

case "$1" in
	'-i'|'--increase')
	increase
	;;
	'-d'|'--decrease')
	decrease
	;;
	'-t'|'--toggle')
	toggle
	;;
	'-m'|'---mute')
	mute
	;;
	'-n'|'--next')
	next
	;;
	'-p'|'--prev')
	previous
	;;
	'-s'|'--stop')
	cancel
	;;
	'-a'|'--announce')
	announce
  ;;
  '-v'|'--version')
  version
	;;
	''|'-h'|'--help')
	usage
	;;
	*)
	err "Unrecognized option \`$1', see ossrat --help"
	;;
esac
