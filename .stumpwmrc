;;--------------------------------------------------------------------------;;
;; ${HOME}/.stumpwmrc                                                       ;;
;;--------------------------------------------------------------------------;;
;; author: milomouse <vincent[at]fea.st>                                    ;;
;; update: 2010-11-24 02:27:46                                              ;;
;;--------------------------------------------------------------------------;;
;; versions used atoc:                                                      ;;
;; |  sbcl              -> 1.0.43-1                                         ;;
;; |  clx               -> 0.7.4-1                                          ;;
;; |  cl-ppcre          -> 2.0.3-1                                          ;;
;; |  stumpwm-git       -> 20101109-1                                       ;;
;; |  surfraw-git       -> 20101103-1                                       ;;
;;-TODO:--------------------------------------------------------------------;;
;; >>--: create a 'dedicate' and 'catchall' hook for changing focus color   ;;
;; >>>-: create a 'dedicate' and 'catchall' window-rule (remember * *)      ;;
;; >>--: have mifo(mplayer-daemon) prompts use filename completion          ;;
;; >---: better resize; if neighbour {above} then -ARG else +ARG, etc.      ;;
;; >>>-: show frame-indicator for 'resize' only if no window in frame       ;;
;; >>--: command-mode for mifo video:seek to eliminate extra key-presses    ;;
;; >---: have my 'undo' use group and check current group for undos first   ;;
;; >>>>? command for dedicating current win/frame as the Master win/frame   ;;
;; >>>>! command for swapping current window with the Master win/frame      ;;
;; >>>>! exchange two windows but keep focus in current frame               ;;
;;--------------------------------------------------------------------------;;
;; files: *data-dir*/../{commands,functions,hooks,key-maps,macros}.lisp     ;;
;;-NOTE:--------------------------------------------------------------------;;
;; 1. for MPlayer, use: mplayer -nokeepaspect {-fstype netwm}               ;;
;; 2. using SBCL now due to stability issues with clisp-new-clx             ;;
;; 3. had to rework most files to accomodate SBCL's finicky handling        ;;
;;--------------------------------------------------------------------------;;

(in-package :stumpwm)
(clear-window-placement-rules)
(setf *data-dir* "/home/milo/.config/stumpwm/storage/")
(defcommand run-shell-command (cmd &optional collect-output-p)
  ((:shell "execute: ")) (if collect-output-p
    (run-prog-collect-output *shell-program* "-c" cmd)
    (run-prog *shell-program* :args (list "-c" cmd) :wait nil)))
(setf *shell-program* "/bin/zsh")
(defcommand-alias exec run-shell-command)

;; function pre-variables
(defvar *surfraw-bookmark-file* (data-dir-file "bookmarks" "txt"))
(defvar *background-image-path* "/home/milo/foto/wall/")

;; gravity
(setf *mouse-focus-policy* :click
      *window-border-style* :thin
      *message-window-gravity* :top-right
      *input-window-gravity* :top-right)
(set-normal-gravity :bottom)
(set-maxsize-gravity :center)
(set-transient-gravity :bottom)

;; borders
(setf *resize-hides-windows* T
      *normal-border-width* 2
      *maxsize-border-width* 2
      *transient-border-width* 2
      *float-window-border* 1
      *float-window-title-height* 1)
(set-msg-border-width 1)

;; fonts/colors
(set-font "-*-fixed-medium-r-normal-*-10-*-*-*-*-*-*-*")
(set-fg-color        "grey64")
(set-bg-color        "grey14")
(set-focus-color     "mediumpurple2")
(set-unfocus-color   "grey16")
(set-border-color    "grey44")
(set-win-bg-color    "grey4")
(setf *colors* (list "grey9" ; 0 black
                     "palevioletred1" ; 1 red
                     "lightblue3" ; 2 green
                     "bisque3" ; 3 yellow
                     "steelblue3" ; 4 blue
                     "slateblue1" ; 5 magenta
                     "aquamarine4" ; 6 cyan
                     "honeydew4" ; 7 white
                     "thistle4" ; 8 user
                     "lightskyblue4")) ; 9 user
(defun fmt-group-status (group)
  (let ((screen (group-screen group)))
    (cond ((eq group (screen-current-group screen))
           #\*)
          ((and (typep (second (screen-groups screen)) 'group)
                (eq group (second (screen-groups screen))))
           #\+)
          (t #\-))))
(update-color-map (current-screen))

;; text formatting (no mode-line)
(setf *time-day-names* #("Mon" "Tue" "Wed" "Thu" "Fri" "Sat" "Sun")
      *time-format-string-default* "^B^2*%T^9* %Y-%m-%d^**/^8*%A^n"
      *screen-mode-line-format* nil
      *startup-message* "^B^1*together we ate the king^**^b:^B^5*and laughed ourselves to death^n"
      *group-format*    "^B^0*%t^7*%s^07|^n"
      *window-format*   "^B^87%s^9*%m^0*%16t^n"
      *timeout-wait* 6
      *debug-level* 10)

;; windows/frames
(setf *default-window-name* "null"
      *normal-gravity* :top-right
      *maxsize-gravity* :top-right
      *transient-gravity* :center
      *new-frame-action* :empty
      *min-frame-width* 100
      *min-frame-height* 50
      *resize-increment* 10)
;;      *frame-number-map* "jkluio789")

;; mode-line/input
(setf *mode-line-background-color* "grey13"
      *mode-line-border-color* "grey25"
      *mode-line-foreground-color* "azure4"
      *mode-line-border-width* 1
      *mode-line-pad-x* 1
      *mode-line-pad-y* 0
      *mode-line-timeout* 1
      *mode-line-position* :top
      *input-history-ignore-duplicates* 0)

;; load external settings' file/s
(loop for file in '("functions" "macros" "commands" "hooks" "key-maps")
      do (load (make-pathname :name file :type "lisp" :directory
      '(:relative ".config" "stumpwm"))))

(setf (group-name (first (screen-groups (current-screen)))) "1")
(make-groups-bg "2" "3" "4" "5" "6")
(restore-from-file (data-dir-file "screen_data_last"))
(restore-window-placement-rules (data-dir-file "placement_rules"))
;(display-random-bg)

